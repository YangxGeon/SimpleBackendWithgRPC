# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import books_pb2 as books__pb2


class BookServiceStub(object):
    """The book service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/books.BookService/List',
                request_serializer=books__pb2.Empty.SerializeToString,
                response_deserializer=books__pb2.BookList.FromString,
                )
        self.Search = channel.unary_unary(
                '/books.BookService/Search',
                request_serializer=books__pb2.SearchRequest.SerializeToString,
                response_deserializer=books__pb2.BookList.FromString,
                )
        self.AddBook = channel.unary_unary(
                '/books.BookService/AddBook',
                request_serializer=books__pb2.AddRequest.SerializeToString,
                response_deserializer=books__pb2.AddResponse.FromString,
                )
        self.DeleteBook = channel.unary_unary(
                '/books.BookService/DeleteBook',
                request_serializer=books__pb2.DeleteRequest.SerializeToString,
                response_deserializer=books__pb2.DeleteResponse.FromString,
                )
        self.UpdateBook = channel.unary_unary(
                '/books.BookService/UpdateBook',
                request_serializer=books__pb2.UpdateRequest.SerializeToString,
                response_deserializer=books__pb2.UpdateResponse.FromString,
                )
        self.UpdateAuthor = channel.unary_unary(
                '/books.BookService/UpdateAuthor',
                request_serializer=books__pb2.UpdateAuthorRequest.SerializeToString,
                response_deserializer=books__pb2.UpdateAuthorResponse.FromString,
                )
        self.UpdateYear = channel.unary_unary(
                '/books.BookService/UpdateYear',
                request_serializer=books__pb2.UpdateYearRequest.SerializeToString,
                response_deserializer=books__pb2.UpdateYearResponse.FromString,
                )
        self.SearchBooksByYear = channel.unary_unary(
                '/books.BookService/SearchBooksByYear',
                request_serializer=books__pb2.SearchBooksByYearRequest.SerializeToString,
                response_deserializer=books__pb2.SearchBooksByYearResponse.FromString,
                )
        self.SearchBooksByAuthor = channel.unary_unary(
                '/books.BookService/SearchBooksByAuthor',
                request_serializer=books__pb2.SearchBooksByAuthorRequest.SerializeToString,
                response_deserializer=books__pb2.SearchBooksByAuthorResponse.FromString,
                )
        self.DeleteAllBooks = channel.unary_unary(
                '/books.BookService/DeleteAllBooks',
                request_serializer=books__pb2.DeleteAllBooksRequest.SerializeToString,
                response_deserializer=books__pb2.DeleteAllBooksResponse.FromString,
                )


class BookServiceServicer(object):
    """The book service definition.
    """

    def List(self, request, context):
        """전체 도서 조회
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """도서 검색
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBook(self, request, context):
        """도서 추가
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBook(self, request, context):
        """도서 삭제
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBook(self, request, context):
        """도서 제목 수정
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAuthor(self, request, context):
        """작가 수정
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateYear(self, request, context):
        """출판년도 수정
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchBooksByYear(self, request, context):
        """출판년도로 도서 검색
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchBooksByAuthor(self, request, context):
        """작가로 도서 검색
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAllBooks(self, request, context):
        """전체 도서 삭제
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=books__pb2.Empty.FromString,
                    response_serializer=books__pb2.BookList.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=books__pb2.SearchRequest.FromString,
                    response_serializer=books__pb2.BookList.SerializeToString,
            ),
            'AddBook': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBook,
                    request_deserializer=books__pb2.AddRequest.FromString,
                    response_serializer=books__pb2.AddResponse.SerializeToString,
            ),
            'DeleteBook': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBook,
                    request_deserializer=books__pb2.DeleteRequest.FromString,
                    response_serializer=books__pb2.DeleteResponse.SerializeToString,
            ),
            'UpdateBook': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBook,
                    request_deserializer=books__pb2.UpdateRequest.FromString,
                    response_serializer=books__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateAuthor': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAuthor,
                    request_deserializer=books__pb2.UpdateAuthorRequest.FromString,
                    response_serializer=books__pb2.UpdateAuthorResponse.SerializeToString,
            ),
            'UpdateYear': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateYear,
                    request_deserializer=books__pb2.UpdateYearRequest.FromString,
                    response_serializer=books__pb2.UpdateYearResponse.SerializeToString,
            ),
            'SearchBooksByYear': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchBooksByYear,
                    request_deserializer=books__pb2.SearchBooksByYearRequest.FromString,
                    response_serializer=books__pb2.SearchBooksByYearResponse.SerializeToString,
            ),
            'SearchBooksByAuthor': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchBooksByAuthor,
                    request_deserializer=books__pb2.SearchBooksByAuthorRequest.FromString,
                    response_serializer=books__pb2.SearchBooksByAuthorResponse.SerializeToString,
            ),
            'DeleteAllBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAllBooks,
                    request_deserializer=books__pb2.DeleteAllBooksRequest.FromString,
                    response_serializer=books__pb2.DeleteAllBooksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'books.BookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BookService(object):
    """The book service definition.
    """

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/List',
            books__pb2.Empty.SerializeToString,
            books__pb2.BookList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/Search',
            books__pb2.SearchRequest.SerializeToString,
            books__pb2.BookList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/AddBook',
            books__pb2.AddRequest.SerializeToString,
            books__pb2.AddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/DeleteBook',
            books__pb2.DeleteRequest.SerializeToString,
            books__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/UpdateBook',
            books__pb2.UpdateRequest.SerializeToString,
            books__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAuthor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/UpdateAuthor',
            books__pb2.UpdateAuthorRequest.SerializeToString,
            books__pb2.UpdateAuthorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateYear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/UpdateYear',
            books__pb2.UpdateYearRequest.SerializeToString,
            books__pb2.UpdateYearResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchBooksByYear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/SearchBooksByYear',
            books__pb2.SearchBooksByYearRequest.SerializeToString,
            books__pb2.SearchBooksByYearResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchBooksByAuthor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/SearchBooksByAuthor',
            books__pb2.SearchBooksByAuthorRequest.SerializeToString,
            books__pb2.SearchBooksByAuthorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAllBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books.BookService/DeleteAllBooks',
            books__pb2.DeleteAllBooksRequest.SerializeToString,
            books__pb2.DeleteAllBooksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
